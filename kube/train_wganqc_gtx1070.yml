apiVersion: v1
kind: Service
metadata:
  name: wganqcv
  labels:
    app: wganqc-train
spec:
  selector:
    app: wganqc-train
  ports:
    - protocol: TCP
      port: 8097
      targetPort: wganqcv-port
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wganqcvisdom
  annotations:
    # using kubernetes/ingress-nginx controller
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /

    # SSL
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/tls-acme: "true"

    # websocket
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"

spec:
  tls:
    - hosts:
        - wganqc1.c.videogorillas.com
      secretName: tls-secret

  rules:
    - host: wganqc1.c.videogorillas.com
      http:
        paths:
          - backend:
              serviceName: wganqcv
              servicePort: wganqcv-port

---
apiVersion: batch/v1
kind: Job
metadata:
  name: train-wganqc
spec:
  backoffLimit: 0
  parallelism: 1
  template:
    metadata:
      labels:
        app: wganqc-train
    spec:
      imagePullSecrets:
        - name: regcred42
      restartPolicy: Never
      containers:
        - image: k10:31337/up4k:wganqc1
          imagePullPolicy: Always
          name: wganqc
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /svlk
              name: svlk-volume
            - mountPath: /storage
              name: storage-volume
          env:
            # 0=Quadro P6000
            # 1=GeForce GTX TITAN
            - name: NVIDIA_VISIBLE_DEVICES
              value: "0"
          command:
            - python
            - "wgan_qc_resnet1.py"
            - "--dataroot"
            - "/storage/clients/bru/data1/oneaxf/"
            - "--dataset"
            - "axf"
            - "--genImg_freq"
            - "20"
            - "--batchSize"
            - "16"
            - "--imageSize"
            - "128"
            - "--output_dir"
            - "/svlk/zhuker_train/wganqc1"
            - "--visdom_host"
            - "http://wganqcv"
          resources:
            limits:
              nvidia.com/gpu: 1
        - image: k10:31337/up4k:wganqc1
          imagePullPolicy: IfNotPresent
          name: wganqcv
          command:
            - "visdom"
          ports:
            - containerPort: 8097
              hostPort: 8097
              name: wganqcv-port


      nodeSelector:
        #        feature.node.kubernetes.io/gfd-nvidia-memory: "24449"
        #        feature.node.kubernetes.io/gfd-nvidia-memory: "8117"

        #        feature.node.kubernetes.io/gfd-nvidia-model: Tesla-K80
        feature.node.kubernetes.io/gfd-nvidia-model: GeForce-GTX-1070
        feature.node.videogorillas.com/storage-speed: "10" #10gbe or direct access
        #        feature.node.kubernetes.io/gfd-nvidia-model: Quadro-P6000


      volumes:
        - name: dshm
          emptyDir:
            medium: Memory

        - name: svlk-volume
          hostPath:
            # directory location on host
            path: /svlk
            # this field is optional
            type: Directory

        - name: storage-volume
          hostPath:
            # directory location on host
            path: /storage
            # this field is optional
            type: Directory
